@using System.Diagnostics.CodeAnalysis
@using Microsoft.Extensions.Localization
@inherits LayoutComponentBase

<PageTitle>BlazorApp1</PageTitle>

<style>
</style>

<Layout SideWidth="220px" ShowGotoTop="true" IsPage="true"
        IsFixedHeader="true" IsFixedFooter="true" ShowFooter="true" IsCollapsed="true">
    <Header>
        <span class="ms-3 flex-sm-fill d-none d-sm-block">cv4pve-admin</span>
        <div class="flex-fill d-sm-none"></div>

<BlazorApp1.Pages.Widgets/>

        <Logout ImageUrl="https://0.gravatar.com/avatar/7624accf2d0083828eee92da1c73b7e8"
                DisplayName="Daniele Corsini" UserName="daniele.corsini@corsinvest.it">
            <LinkTemplate>
                <a href="#"><i class="fa fa-envelope-o"></i>daniele.corsini@corsinvest.it</a>
                <a href="#"><i class="fa fa-suitcase"></i>bbbb</a>
                <a href="#"><i class="fa fa-cog"></i>Settings</a>
                <a href="#"><i class="fa fa-bell"></i>aaaaa<span class="badge badge-pill badge-success"></span></a>
                <LogoutLink />
            </LinkTemplate>
        </Logout>
    </Header>
    <Side>
        <Menu Items="@Items" DisableNavigation="true" IsVertical="true" style="border-right: 1px solid #e6e6e6;">
        </Menu>
    </Side>
    <Main>
        @Body
    </Main>
    <Footer>
        <div class="text-center flex-fill">
            <a class="page-layout-demo-footer-link" href="https://gitee.com/LongbowEnterprise/BootstrapAdmin" target="_blank">cv4pve-admin</a>
        </div>
    </Footer>
    <NotFound>
        <p>Sorry, there's nothing at this address.</p>
    </NotFound>
</Layout>

@code
{
    [Inject][NotNull] private IStringLocalizer<MainLayout>? Localizer { get; set; }

    List<MenuItem> Items;

    protected override async Task OnInitializedAsync()
    {
        Items = new List<MenuItem>
        {
            new(Localizer["System"].Value, icon: "fa fa-gears")
            {
                IsActive = true,
                Items = new List<MenuItem>
                {
                    new(Localizer["Website"].Value, icon: "fa fa-fa"),
                    new(Localizer["Task"].Value, icon: "fa fa-tasks")
                }
            },
            new(Localizer["Authorize"].Value, icon: "fa fa-users")
            {
                Items = new List<MenuItem>
                {
                    new(Localizer["User"].Value, icon: "fa fa-user"),
                    new(Localizer["Menu"].Value, icon: "fa fa-dashboard"),
                    new(Localizer["Role"].Value, icon: "fa fa-sitemap")
                }
            },
            new(Localizer["Log"].Value, icon: "fa fa-database")
            {
                Template = BuildDynamicComponent().Render(),
                Items = new List<MenuItem>
                {
                    new(Localizer["Access"].Value, icon: "fa fa-bars"),
                    new(Localizer["Login"].Value, icon: "fa fa-user-circle-o"),
                    new(Localizer["Operation"].Value, icon: "fa fa-edit")
                    {
                        Template = BuildDynamicComponent().Render()
                    }
                }
            }
        };
    }

    private static BootstrapDynamicComponent BuildDynamicComponent()
        => BootstrapDynamicComponent.CreateComponent<Badge>(new Dictionary<string, object?>
            {
                [nameof(Badge.Color)] = Color.Danger,
                [nameof(Badge.IsPill)] = true,
                [nameof(Badge.ChildContent)] = new RenderFragment(builder =>
{
            var index = 0;
            builder.AddContent(index++, "10");
        })
            });

}